{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/recipes.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","state","Promise","resolve","setState","url","this","fetch","response","text","jsdom","require","JSDOM","dom","title","window","document","querySelector","textContent","ingredientNames","getElementsByClassName","ingredientUnits","ingredient_0","firstElementChild","ingredient_1","list_ingredientNames","list_ingredientNamesComma","list_ingredientUnits","dict_ingredients","i","length","push","setStateAsync","recipeName","ingredientName1","ingredientUnit1","ingredientNamesComma","ingredients","id","className","style","textTransform","alt","src","Component","CardList","recipes","map","recipe","baseUrl","recipeId","Searchbox","searchfield","searchChange","type","placeholder","onChange","platforms","name","App","onSearchChange","event","target","value","filteredRecipes","filter","toLowerCase","includes","SearchBox","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2f7c6acf.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Card extends Component {\n  state = {};\n constructor(props) {\n   super(props);\n   this.state = {\n\t   \n   };\n }\n  setStateAsync(state) {\n    return new Promise((resolve) => {\n      this.setState(state, resolve);\n    });\n  }\n  async componentDidMount() {\n\tconst { url } = this.props;\n\tconst response = await fetch(url);\n\tconst text = await response.text();\n\n\tconst jsdom = require(\"jsdom\");\n\tconst { JSDOM } = jsdom;\n\tconst dom = new JSDOM(text);\n\tconst title = dom.window.document.querySelector(\"h1\").textContent;\n\n\tconst ingredientNames = dom.window.document.getElementsByClassName('ingredient-name');\n\tconst ingredientUnits = dom.window.document.getElementsByClassName('ingredient-unit');\n\tconst ingredient_0 = ingredientNames[0].firstElementChild.textContent; \n\tconst ingredient_1 = ingredientUnits[0].textContent;\n\tvar list_ingredientNames = [];\n\tvar list_ingredientNamesComma = [];\n\tvar list_ingredientUnits = [];\n\tvar dict_ingredients = {};\n\tfor (var i = 0; i < ingredientNames.length; i++) {\n\t\tif (i !== ingredientNames.length - 1) {\n    \tlist_ingredientNamesComma.push(ingredientNames[i].firstElementChild.textContent);\n    \tlist_ingredientNamesComma.push(', ');\n\t\t} else {\n\t\t\tlist_ingredientNamesComma.push(ingredientNames[i].firstElementChild.textContent);\n\t\t}\n\t\tlist_ingredientNames.push(ingredientNames[i].firstElementChild.textContent);\n    \tlist_ingredientUnits.push(ingredientUnits[i].textContent);\n    \tdict_ingredients[ingredientNames[i].firstElementChild.textContent] = ingredientUnits[i].textContent;\n\n\t}\n\t// console.log({list_ingredientNames, list_ingredientUnits});\n\n\t// console.log(dict_ingredients);\n    await this.setStateAsync(\n    \t{\n    \t\trecipeName: title,\n    \t\tingredientName1: ingredient_0,\n    \t\tingredientUnit1: ingredient_1,\n    \t\tingredientNames: list_ingredientNames,\n    \t\tingredientNamesComma: list_ingredientNamesComma,\n    \t\tingredientUnits: list_ingredientUnits,\n    \t\tingredients: dict_ingredients\n    \t}\n    )\n  }\n  render() {\n  \tconst { id } = this.props;\n  \tconst ingredientNamesComma = this.state.ingredientNamesComma;\n  \t// const ingredientNames = this.state.ingredientNames;\n  \t// const ingredients = this.state.ingredients;\n  \t// console.log(ingredientNames);\n  \t// console.log(ingredients);\n    return (\n\t\t<div className='tc bg-light-gray dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<h2>{this.state.recipeName || 'Unknown'}</h2>\n\t\t\t<p>{this.state.ingredientName1}:{this.state.ingredientUnit1}</p>\n\t\t\t<h1>...</h1>\n\t\t\t<h2 style={{ textTransform: 'uppercase' }}>Ingredients</h2>\n\t\t\t<p>{ingredientNamesComma}</p>\n\t\t\t<img alt='recipes' src={`https://robohash.org/${id}?200x200`} />\n\t\t</div>\t\n    );\n  }\n}\n\nexport default Card;\n\n\n// const Card = ({ name, email, id }) => {\n// \treturn(\n// \t\t<div className='tc bg-light-gray dib br3 pa3 ma2 grow bw2 shadow-5'>\n// \t\t\t<h1>RoboRecipes</h1>\n// \t\t\t<img alt='recipes' src={`https://robohash.org/${id}?200x200`} />\n// \t\t\t<div>\n// \t\t\t\t<h2>{name}</h2>\n// \t\t\t\t<p>{email}</p>\n// \t\t\t</div>\n// \t\t</div>\t\n// \t);\n// }\n\n// export default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ recipes }) => {\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\trecipes.map((recipe, i) => {\n\t\t\t\t\treturn\t(\n\t\t\t\t\t\t<Card \n\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\turl={recipes[i].baseUrl+recipes[i].recipeId} \n\t\t\t\t\t\t\tid={recipes[i].id} \n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default CardList;","import React from 'react';\n\nconst Searchbox = ({searchfield, searchChange}) => {\n\treturn (\n\t\t<div className='pa2'>\n\t\t\t<input\n\t\t\t\tclassName = 'pa3 ba b--yellow bg-lightest-pink' \n\t\t\t\ttype='search' \n\t\t\t\tplaceholder='search recipes'\n\t\t\t\tonChange={searchChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default Searchbox;","const platforms = [\n  {\n    id: 0,\n    name: 'icook',\n    baseUrl: 'https://icook.tw/recipes/',\n  }\n];\n// console.log(platforms[0]);\n\nexport const recipes = [\n  {\n    id: 1,\n    recipeId: '46241',\n    baseUrl: platforms[0].baseUrl,\n    ingredients: '紅蕃茄(中型), 雞蛋(大), 蕃茄醬(可以不用!), 蔥花, 蒜末, 橄欖油, 香油, 烹大師, 鹽, 糖'\n  },\n  {\n    id: 2,\n    recipeId: '164694',\n    baseUrl: platforms[0].baseUrl,\n    ingredients: '去骨雞腿, 原味無糖優格, 咖哩粉, 紅椒粉, 辣椒粉, 鹽, 檸檬'\n  },\n  {\n    id: 3,\n    recipeId: '350567',\n    baseUrl: platforms[0].baseUrl,\n    ingredients: '甜椒, 杏鮑菇, 蒜頭, 氟碘鹽, 葡萄籽油'\n  },\n  {\n    id: 4,\n    recipeId: '220200',\n    baseUrl: platforms[0].baseUrl,\n    ingredients: '去骨雞腿排, 香菜葉, 大蒜（切末）, 辣椒（切末）, 香菜根（切末）, 檸檬汁, 魚露, 醬油, 砂糖, 花椒油, 醬油, 砂糖, 醋, 薑末, 地瓜粉'\n  },\n  {\n    id: 5,\n    recipeId: '324360',\n    baseUrl: platforms[0].baseUrl,\n    ingredients: '鯛魚片, 嫩豆腐, 蔥段, 薑片, 鹽巴, 白胡椒, 米酒, 醬油'\n  },\n  {\n    id: 6,\n    recipeId: '349813',\n    baseUrl: platforms[0].baseUrl,\n    ingredients: '去骨雞腿, 鹽, 胡椒粉, 米酒, 當歸, 枸杞, 香菇高湯塊, 花雕或黃酒, 鹽, 水'\n  },\n  {\n    id: 7,\n    recipeId: '364268',\n    baseUrl: platforms[0].baseUrl,\n    ingredients: '豬絞肉, 洋蔥, 新鮮香菇, 高麗菜, 蒜頭, 醬油, 七味粉, 蒜末, 玉米粉, 鹽巴'\n  },\n  {\n    id: 8,\n    recipeId: '363914',\n    baseUrl: platforms[0].baseUrl,\n    ingredients: '西洋芹, 蒜頭'\n  },\n  {\n    id: 9,\n    recipeId: '284325',\n    baseUrl: platforms[0].baseUrl,\n    ingredients: '高筋麵粉, 中筋麵粉, 奶油, 鮮奶（或是水, 糖, 鹽巴, 酵母粉, 杏仁果, 砂糖, 巧克力醬'\n  },\n  // {\n  //   id: 9,\n  //   name: 'Glenna Reichert',\n  //   username: 'Delphine',\n  //   email: 'Chaim_McDermott@dana.io'\n  // },\n  // {\n  //   id: 10,\n  //   name: 'Clementina DuBuque',\n  //   username: 'Moriah.Stanton',\n  //   email: 'Rey.Padberg@karina.biz'\n  // }\n];\n","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport { recipes } from '../components/recipes';\nimport './App.css';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trecipes: recipes,\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\n\t// componentDidMount () {\n\t// \tfetch('https://icook.tw/recipes/').then(response=>{\n\t// \t\tconsole.log(response)\n\t// \t})\n\t// }\n\n\tonSearchChange = (event) => {\n\t\tthis.setState({ searchfield: event.target.value })\n\t}\n\n\trender() {\n\t\tconst filteredRecipes = this.state.recipes.filter(recipe => {\n\t\t\t\treturn recipe.ingredients.toLowerCase().includes(this.state.searchfield.toLowerCase());\n\t\t\t})\n\t\treturn (\n\t\t\t<div className='tc'>\n\t\t\t\t<h1 className='f1'>RoboRecipes</h1>\n\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\n\t\t\t\t<CardList recipes={filteredRecipes} />\n\t\t\t</div>\n\t\t);\t\t\n\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n// import Card from './Card';\n// import CardList from './CardList';\n// import { recipes } from './recipes';\n\nReactDOM.render(\n  <React.StrictMode>\n\t\t<App />,\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n    \t\n    \t// <Card url={recipes[0].url} id={0} />\n    \t// <Card url='https://icook.tw/recipes/46241' id={0} />\n    \t// <Card url='https://icook.tw/recipes/164694' id={1} />\n    \t// <Card url='https://icook.tw/recipes/350567' id={2} />\n    \t// <Card46241 />\n    \t// <Card164694 />\n    \t// <Card350567 />\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n    \t// <Card id={recipes[0].id} name={recipes[0].name} email={recipes[0].email}/>\n    \t// <Card id={recipes[1].id} name={recipes[1].name} email={recipes[1].email}/>\n    \t// <Card id={recipes[2].id} name={recipes[2].name} email={recipes[2].email}/>\n    \t// <Card id={recipes[3].id} name={recipes[3].name} email={recipes[3].email}/>\t"],"sourceRoot":""}